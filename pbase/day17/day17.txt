day16笔记:
  文件 ----用来永久存储数据
    长期存储数据
    单位是字节(byte)
    文件的操作:
      1. 打开文件  
      2. 读/写文件
      3. 关闭文件
        释放资源(缓冲区, 内核资源) 
    打开文件的函数:
      open(文件路径名, 打开模式)
    方法:
      F.close() 关闭文件
      # 读, 仅在'r'模式下可用
      F.read([n]) 读取n个字节/n个字符     不加n的读取全部字符
      F.readline() 读取一行
      F.readlines() 读取多行
        # 写, 仅在'w', 'x', 'a' 模式下使用
      F.write(字节串/字符串)
      F.writelines([字节串/字符串元素])
        # 以下两个函数通常只对二进制模式文件操作
      F.seek(偏移量,起始位置) # 改变读写位置 指针
      F.tell() # 得到当前读写位置 指针
      
      F.flush() # 清空缓冲区-------提高程序的运行速度,提高效率 大小通常4k,8k
  打开模式:
    二进制模式: 'b'
      把文件看成字节数据,读写时会直接把磁盘数据以字节串形式返回或写入
    文本模式: 't'
      把文件看成是字符数据,读写过程中会自动编/解码(默认是'utf-8'),而且会把换行符自动转换
  汉字编码
    只有两种:
      GB系列(国家标准)
        GB18030(GBK(GB2312))
      unicode系列(国际标准)
        unicode32(unicode16) <--> UTF-8互转
         2**32个字  65536字

  编码字符串:
    'gb18030', 'gbk', 'gb2312', 'utf-8', 'ASCII', ...
  编码注释:
    # -*- coding:gbk -*-
    # -*- coding:utf-8 -*-
  
  标准输入输出文件:
    sys.stdin     input
    sys.stdout    print
    sys.stderr    打印错误信息(默认输出到终端)

day17笔记:

  面向对象编程 Object-Oriented Programming

  什么是对象:
    对象是指现实中的物体或实体                                        面向过程编程  面向对象编程
                                                                  基本单位:     基本单位:
  什么是面向对象:                                                      函数类       类class
    把一切看成对象(实例....)                                          面向对象是把过程分类组成
      把各种对象之间的关系来描述事务

  对象都有什么特征:
    对象有很多属性(名词,形容词)
      姓名,年龄,性别
    对象有很多行为(动作,动词)
      学习,吃饭,睡觉,踢球,工作
    
  什么是类
    拥有相同属性和行为的对象分为一组即为一个类,类是用来描述对象的工具,用类可以创建此类的对象(实例)

  示意:
    车(类) ------->> BYD E6(京A.88888) 对象(实例)
          \
          \ ---->> BMW X5(京B.00000) 对象(实例)

  类的创建语句 class 语句
    语法:
      class 类名(继承列表):
          '''类的文档字符串'''
          实例方法
          类变量
          类方法(@classmethod)
          静态方法(@staticmethod)
    作用:
      创建一个类
      用于描述此类对象的行为和属性
      类用于创建此类的一个或多个对象(实例)
    说明:
      类名必须是标识符
      类名实质是变量,它在创建类时绑定一个类
    示例见:
      class.py
  构造函数:
    调用表达式:
      类名([创建传参列表])
    作用:
      创建这个类的实例对象,并返回此实例对象的引用关系
    说明: 
      实例有自己的作用域和名字空间,可以为该实例添加实例变量(也叫属性)
    示例见:
      constructor.py
  实例方法( instance method)
    定义语法:
      class 类名(继承列表):
        def 实例方法名(self, 形参列表):
            '''方法的文档字符串'''
            语句空
    作用:
      用于描述一个对象的行为,让此类型的全部对象都拥有相同的行为
    说明: 
      实例方法的实质是函数,是定义在类内的函数
      实例方法至少有一个刑参,第一个刑参绑定调用这个方法的实例,一般命名为'self'
    实例方法的调用语法:
      实例.实例方法名(调用实参)
      或
      类名.实例方法名(实例, 调用实参)
    示例见:
      instance_method.py
  实例属性: instance attribute
    每个实例都可以有自己的变量.称实例变量(也叫属性)
  使用语法:
    示例.属性名
  赋值规则:
    首次赋值则创建此属性
    再次赋值则改变此属性的绑定关系
  作用:
    记录对每个对象自身的数据
  示例见:
    instance_attribute.py
  练习:
    定义一个"人"类
      答案见:class_Human

  del 语句用于删除实例属性
    语法:
      del 对象.实例变量
  
  del 语句小结:
    1) 删除变量
      del a, b, c
    2) 删除列表中的元素
      del L[0]
    3) 删除字典的键值对
      del d['score']
    4) 删除对象的实例变量/属性
      del obj.attr 
  初始化方法
    作用:
      对新创建的对象添加属性
    
    格式:
      class 类名(继承类名):
          def __init__(self,形参列表):
            语句块
    说明:
      1. 初始化方法名必须为'__init__' 不可改变
      2. 初始化方法会在格欧早函数创建实例后自动调用,且将实例自身通过第一个参数self传入'__init__'方法
      3. 构造函数的实参将通过'__init__'方法的形参列表传入到'__init__'方法中
      4. 初始化方法必须返回None
  
  练习:
    写一个学生类 Student 类,此类用于描述学生信息
      学生信息有:
        姓名,年龄,成绩(默认为0)
    1) 为该类添加初始化方法,实现在创建对象时自动设置姓名,年龄,成绩
    2) 添加set_score方法,能为 对象修改成绩信息
    3) 添加show_info方法打印学生信息
  
  析构方法:
    class 类名(继承列表):
      def __del__(self):
          ...
    作用:
      在对象销毁前释放对象占用的资源(文件,内存,CPU)
    说明:
      析构方法会在对象销毁前被自动调用
      python语言建议不要在对象销毁时做任何事情,因为销毁的时间难以确定
    示例见:
      del _method.py
  
  预置示例属性(实例变量)  python用字典(__dict__)来存储实例变量自身属性
    __dict__属性
      此属性绑定一个存储此时自身变量的字典
    示例:
      class Dog:
          pass
      dog1 = Dog()
      print(dog1.__dict__) # {}
      dog1.kinds = "京巴"
      print(dog1.__dict__) # {'kinds':'京巴'}

  __class__属性
    __class__属性绑定创建此示例的类
  作用:
    可以借助于此属性来访问创建此实例的类
  示例:
    class Dog:
        pass
    dog1 = Dog()
    print(dog1.__class__)
    dog2 = dog1.__class__()
    print(dog2.__class__)
  
  面向对象综合练习:
    两个人:
      1.姓名: 张三, 年龄: 35
      2.姓名: 李四, 年龄: 8
    行为:
      教别人学东西 teach
      赚钱 work
      借钱 borrow
      显示自己的信息 show_info
    事情:
      张三 教 李四 学 python
      李四 教 张三 学 王者荣耀
      张三 上班赚了 1000元钱
      李四 向 张三 借了 200 元钱
    打印信息:
      35 岁的 张三 有钱 800 元 他学会的技能: 王者荣耀
      8  岁的 李四 有钱 200 元 他学会的技能: python
    
    用于类的函数:
      isinstance(obj, class_or_tuple) 返回对象obj是否是某个类的对象或者某些类的一个类的对象,如果是返回True,否则返回False
      type(obj) 返回对象的类型(类)
    示例:
      isinstance(100, int)  # True
      isinstance(3.14, int) # False
      class Dog:
          pass
      dog1 = Dog()
      isinstance(dog1, Dog) # True
      type(dog1) is Dog # True
  
  修改原学生管理项目:
    添加两个功能:
      9) 从文件中读取数据(si.txt)
      10) 保存信息到文件(si.txt)